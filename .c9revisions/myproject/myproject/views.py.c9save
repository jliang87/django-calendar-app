{"ts":1365356957220,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import time\nimport calendar\nfrom datetime import date, datetime, timedelta\n\nfrom django.core.urlresolvers import reverse\nfrom django.contrib.auth.decorators import login_required\nfrom django.http import HttpResponseRedirect, HttpResponse\nfrom django.shortcuts import get_object_or_404, render_to_response\nfrom django.core.context_processors import csrf\nfrom django.forms.models import modelformset_factory\nfrom django.template import RequestContext\n\nfrom dbe.cal.models import *\n\nmnames = \"January February March April May June July August September October November December\"\nmnames = mnames.split()\n\n\ndef _show_users(request):\n    \"\"\"Return show_users setting; if it does not exist, initialize it.\"\"\"\n    s = request.session\n    if not \"show_users\" in s:\n        s[\"show_users\"] = True\n    return s[\"show_users\"]\n\n@login_required\ndef settings(request):\n    \"\"\"Settings screen.\"\"\"\n    s = request.session\n    _show_users(request)\n    if request.method == \"POST\":\n        s[\"show_users\"] = (True if \"show_users\" in request.POST else False)\n    return render_to_response(\"cal/settings.html\", add_csrf(request, show_users=s[\"show_users\"]), context_instance=RequestContext(request))\n\ndef reminders(request):\n    \"\"\"Return the list of reminders for today and tomorrow.\"\"\"\n    year, month, day = time.localtime()[:3]\n    reminders = Entry.objects.filter(date__year=year, date__month=month,\n                                   date__day=day, creator=request.user, remind=True)\n    tomorrow = datetime.now() + timedelta(days=1)\n    year, month, day = tomorrow.timetuple()[:3]\n    return list(reminders) + list(Entry.objects.filter(date__year=year, date__month=month,\n                                   date__day=day, creator=request.user, remind=True))\n\n@login_required\ndef main(request, year=None):\n    \"\"\"Main listing, years and months; three years per page.\"\"\"\n    # prev / next years\n    if year: year = int(year)\n    else:    year = time.localtime()[0]\n\n    nowy, nowm = time.localtime()[:2]\n    lst = []\n\n    # create a list of months for each year, indicating ones that contain entries and current\n    for y in [year, year+1, year+2]:\n        mlst = []\n        for n, month in enumerate(mnames):\n            entry = current = False   # are there entry(s) for this month; current month?\n            entries = Entry.objects.filter(date__year=y, date__month=n+1)\n            if not _show_users(request):\n                entries = entries.filter(creator=request.user)\n\n            if entries:\n                entry = True\n            if y == nowy and n+1 == nowm:\n                current = True\n            mlst.append(dict(n=n+1, name=month, entry=entry, current=current))\n        lst.append((y, mlst))\n\n    return render_to_response(\"cal/main.html\", dict(years=lst, user=request.user, year=year,\n                                                   reminders=reminders(request)),\n                                                   context_instance=RequestContext(request))\n\n@login_required\ndef month(request, year, month, change=None):\n    \"\"\"Listing of days in `month`.\"\"\"\n    year, month = int(year), int(month)\n\n    # apply next / previous change\n    if change in (\"next\", \"prev\"):\n        now, mdelta = date(year, month, 15), timedelta(days=31)\n        if change == \"next\":   mod = mdelta\n        elif change == \"prev\": mod = -mdelta\n\n        year, month = (now+mod).timetuple()[:2]\n\n    # init variables\n    cal = calendar.Calendar()\n    month_days = cal.itermonthdays(year, month)\n    nyear, nmonth, nday = time.localtime()[:3]\n    lst = [[]]\n    week = 0\n\n    # make month lists containing list of days for each week\n    # each day tuple will contain list of entries and 'current' indicator\n    for day in month_days:\n        entries = current = False   # are there entries for this day; current day?\n        if day:\n            entries = Entry.objects.filter(date__year=year, date__month=month, date__day=day)\n            if not _show_users(request):\n                entries = entries.filter(creator=request.user)\n            if day == nday and year == nyear and month == nmonth:\n                current = True\n\n        lst[week].append((day, entries, current))\n        if len(lst[week]) == 7:\n            lst.append([])\n            week += 1\n\n    return render_to_response(\"cal/month.html\", dict(year=year, month=month, user=request.user,\n                        month_days=lst, mname=mnames[month-1], reminders=reminders(request)),\n                        context_instance=RequestContext(request))\n\n@login_required\ndef day(request, year, month, day):\n    \"\"\"Entries for the day.\"\"\"\n    EntriesFormset = modelformset_factory(Entry, extra=1, exclude=(\"creator\", \"date\"),\n                                          can_delete=True)\n    other_entries = []\n    if _show_users(request):\n        other_entries = Entry.objects.filter(date__year=year, date__month=month,\n                                       date__day=day).exclude(creator=request.user)\n\n    if request.method == 'POST':\n        formset = EntriesFormset(request.POST)\n        if formset.is_valid():\n            # add current user and date to each entry & save\n            entries = formset.save(commit=False)\n            for entry in entries:\n                entry.creator = request.user\n                entry.date = date(int(year), int(month), int(day))\n                entry.save()\n            return HttpResponseRedirect(reverse(\"cal:month\", args=(year, month)))\n\n    else:\n        # display formset for existing enties and one extra form\n        formset = EntriesFormset(queryset=Entry.objects.filter(date__year=year,\n            date__month=month, date__day=day, creator=request.user))\n    return render_to_response(\"cal/day.html\", add_csrf(request, entries=formset, year=year,\n            month=month, day=day, other_entries=other_entries, reminders=reminders(request)),\n            context_instance=RequestContext(request))\n\n\ndef add_csrf(request, **kwargs):\n    \"\"\"Add CSRF and user to dictionary.\"\"\"\n    d = dict(user=request.user, **kwargs)\n    d.update(csrf(request))\n    return d\n"]],"start1":0,"start2":0,"length1":0,"length2":6055}]],"length":6055}
{"contributors":[],"silentsave":true,"ts":1365356978414,"patch":[[{"diffs":[[0,"rom "],[-1,"dbe.cal"],[1,"myproject"],[0,".mod"]],"start1":451,"start2":451,"length1":15,"length2":17}]],"length":6057,"saved":false}
{"ts":1365358029335,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":16,"length2":18}]],"length":6059,"saved":false}
{"ts":1365358042747,"patch":[[{"diffs":[[0,"ind=True))\n\n"],[1,"# "],[0,"@login_requi"]],"start1":1738,"start2":1738,"length1":24,"length2":26}]],"length":6061,"saved":false}
{"ts":1365358047862,"patch":[[{"diffs":[[0,"text(request))\n\n"],[1,"# "],[0,"@login_required\n"]],"start1":2959,"start2":2959,"length1":32,"length2":34}]],"length":6063,"saved":false}
{"ts":1365358052339,"patch":[[{"diffs":[[0,"uest))\n\n"],[1,"# "],[0,"@login_r"]],"start1":4504,"start2":4504,"length1":16,"length2":18}]],"length":6065,"saved":false}
{"ts":1365358240592,"patch":[[{"diffs":[[0,"tml\""],[-1,", dict(years=lst, user=request.user, year=year,\n                                                   reminders=reminders(request)),\n                                                   context_instance=RequestContext(request)"],[0,")\n\n#"]],"start1":2747,"start2":2747,"length1":229,"length2":8}]],"length":5844,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365391418178,"patch":[[{"diffs":[[0,"ind=True))\n\n"],[-1,"#"],[0," @login_requ"]],"start1":1738,"start2":1738,"length1":25,"length2":24}]],"length":5843,"saved":false}
{"ts":1365391421076,"patch":[[{"diffs":[[0,"html\")\n\n"],[-1,"# "],[0,"@login_r"]],"start1":2745,"start2":2745,"length1":18,"length2":16}]],"length":5841,"saved":false}
{"ts":1365391423296,"patch":[[{"diffs":[[0,"True))\n\n"],[-1," "],[0,"@login_r"]],"start1":1742,"start2":1742,"length1":17,"length2":16}]],"length":5840,"saved":false}
{"ts":1365391426638,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[-1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":18,"length2":16}]],"length":5838,"saved":false}
{"ts":1365391432445,"patch":[[{"diffs":[[0,"uest))\n\n"],[-1,"# "],[0,"@login_r"]],"start1":4277,"start2":4277,"length1":18,"length2":16}]],"length":5836,"saved":false}
{"ts":1365398203876,"patch":[[{"diffs":[[0,"t, year="],[-1,"None"],[0,"):\n    \""]],"start1":1779,"start2":1779,"length1":20,"length2":16}]],"length":5832,"saved":false}
{"ts":1365398208338,"patch":[[{"diffs":[[0,"t, year="],[1,"2013"],[0,"):\n    \""]],"start1":1779,"start2":1779,"length1":16,"length2":20}]],"length":5836,"saved":false}
{"ts":1365398648068,"patch":[[{"diffs":[[0,"sponse(\""],[-1,"cal/"],[0,"settings"]],"start1":1065,"start2":1065,"length1":20,"length2":16}]],"length":5832,"saved":false}
{"ts":1365398652952,"patch":[[{"diffs":[[0,"sponse(\""],[1,"cal/"],[0,"settings"]],"start1":1065,"start2":1065,"length1":16,"length2":20},{"diffs":[[0,"year=201"],[-1,"3"],[0,"):\n    \""]],"start1":1782,"start2":1782,"length1":17,"length2":16}]],"length":5835,"saved":false}
{"ts":1365398655048,"patch":[[{"diffs":[[0,"nse(\"cal"],[-1,"/"],[0,"settings"]],"start1":1068,"start2":1068,"length1":17,"length2":16},{"diffs":[[0,"year=201"],[1,"3"],[0,"):\n    \""]],"start1":1781,"start2":1781,"length1":16,"length2":17}]],"length":5835,"saved":false}
{"ts":1365398723487,"patch":[[{"diffs":[[0,"nse(\"cal"],[1,"/"],[0,"settings"]],"start1":1068,"start2":1068,"length1":16,"length2":17},{"diffs":[[0,"se(\""],[-1,"cal:"],[0,"mont"]],"start1":5173,"start2":5173,"length1":12,"length2":8}]],"length":5832,"saved":false}
{"ts":1365398727979,"patch":[[{"diffs":[[0,"everse(\""],[1,"myproject.vi"],[0,"month\", "]],"start1":5169,"start2":5169,"length1":16,"length2":28}]],"length":5844,"saved":false}
{"ts":1365398729541,"patch":[[{"diffs":[[0,"oject.vi"],[1,"ews."],[0,"month\", "]],"start1":5181,"start2":5181,"length1":16,"length2":20}]],"length":5848,"saved":false}
{"ts":1365399562149,"patch":[[{"diffs":[[0,"ct.views"],[-1,"."],[0,"month\", "]],"start1":5184,"start2":5184,"length1":17,"length2":16}]],"length":5847,"saved":false}
{"ts":1365399567448,"patch":[[{"diffs":[[0,"ct.views"],[1,"."],[0,"month\", "]],"start1":5184,"start2":5184,"length1":16,"length2":17}]],"length":5848,"saved":false}
{"ts":1365399602330,"patch":[[{"diffs":[[0,"ear="],[-1,"2013"],[1,"No"],[0,"):\n "]],"start1":1783,"start2":1783,"length1":12,"length2":10}]],"length":5846,"saved":false}
{"ts":1365399603641,"patch":[[{"diffs":[[0," year=No"],[1,"ne"],[0,"):\n    \""]],"start1":1781,"start2":1781,"length1":16,"length2":18}]],"length":5848,"saved":false}
{"ts":1365399991685,"patch":[[{"diffs":[[0,"in.html\""],[1,",  dict(years=lst, user=request.user, year=year,\n                                                   reminders=reminders(request))"],[0,")\n\n@logi"]],"start1":2739,"start2":2739,"length1":16,"length2":145}]],"length":5977,"saved":false}
{"ts":1365399992830,"patch":[[{"diffs":[[0,"n.html\","],[-1," "],[0," dict(ye"]],"start1":2740,"start2":2740,"length1":17,"length2":16}]],"length":5976,"saved":false}
{"ts":1365401409663,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":16,"length2":18}]],"length":5978,"saved":false}
{"ts":1365401411198,"patch":[[{"diffs":[[0,"ind=True))\n\n"],[1,"# "],[0,"@login_requi"]],"start1":1738,"start2":1738,"length1":24,"length2":26}]],"length":5980,"saved":false}
{"ts":1365401413702,"patch":[[{"diffs":[[0,"request)))\n\n"],[1,"# "],[0,"@login_requi"]],"start1":2870,"start2":2870,"length1":24,"length2":26}]],"length":5982,"saved":false}
{"ts":1365401420202,"patch":[[{"diffs":[[0,"uest))\n\n"],[1,"# "],[0,"@login_r"]],"start1":4411,"start2":4411,"length1":16,"length2":18}]],"length":5984,"saved":false}
{"ts":1365401445783,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[-1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":18,"length2":16},{"diffs":[[0,"in_required\n"],[1,""],[0,"def settings"]],"start1":822,"start2":822,"length1":24,"length2":24},{"diffs":[[0,"ind=True))\n\n"],[-1,"# "],[0,"@login_requi"]],"start1":1736,"start2":1736,"length1":26,"length2":24},{"diffs":[[0,"in_required\n"],[1,""],[0,"def main(req"]],"start1":1752,"start2":1752,"length1":24,"length2":24},{"diffs":[[0,"request)))\n\n"],[-1,"# "],[0,"@login_requi"]],"start1":2866,"start2":2866,"length1":26,"length2":24},{"diffs":[[0,"in_required\n"],[1,""],[0,"def month(re"]],"start1":2882,"start2":2882,"length1":24,"length2":24},{"diffs":[[0,"uest))\n\n"],[-1,"# "],[0,"@login_r"]],"start1":4405,"start2":4405,"length1":18,"length2":16}]],"length":5976,"saved":false}
{"ts":1365401448717,"patch":[[{"diffs":[[0,"/main.html\","],[1," "],[0," dict(years="]],"start1":2736,"start2":2736,"length1":24,"length2":25}]],"length":5977,"saved":false}
{"ts":1365401451810,"patch":[[{"diffs":[[0,"n.html\","],[-1," "],[0," dict(ye"]],"start1":2740,"start2":2740,"length1":17,"length2":16}]],"length":5976,"saved":false}
{"ts":1365401452261,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":16,"length2":18}]],"length":5978,"saved":false}
{"ts":1365401454924,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[-1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":18,"length2":16}]],"length":5976,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365440029259,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":16,"length2":18}]],"length":5978,"saved":false}
{"ts":1365440032414,"patch":[[{"diffs":[[0,"ind=True))\n\n"],[1,"# "],[0,"@login_requi"]],"start1":1738,"start2":1738,"length1":24,"length2":26}]],"length":5980,"saved":false}
{"ts":1365440036419,"patch":[[{"diffs":[[0,"request)))\n\n"],[1,"# "],[0,"@login_requi"]],"start1":2870,"start2":2870,"length1":24,"length2":26}]],"length":5982,"saved":false}
{"ts":1365440149288,"patch":[[{"diffs":[[0,"uest))\n\n"],[1,"# "],[0,"@login_r"]],"start1":4411,"start2":4411,"length1":16,"length2":18}]],"length":5984,"saved":false}
{"ts":1365440195964,"patch":[[{"diffs":[[0,"(request))\n\n"],[-1,"# "],[0,"@login_requi"]],"start1":4407,"start2":4407,"length1":26,"length2":24}]],"length":5982,"saved":false}
{"ts":1365440198758,"patch":[[{"diffs":[[0,"uest))\n\n"],[1,"# "],[0,"@login_r"]],"start1":4411,"start2":4411,"length1":16,"length2":18}]],"length":5984,"saved":false}
{"ts":1365440201419,"patch":[[{"diffs":[[0,"(request))\n\n"],[-1,"# "],[0,"@login_requi"]],"start1":4407,"start2":4407,"length1":26,"length2":24}]],"length":5982,"saved":false}
{"ts":1365440204606,"patch":[[{"diffs":[[0,"sers\"]\n\n"],[-1,"# "],[0,"@login_r"]],"start1":810,"start2":810,"length1":18,"length2":16}]],"length":5980,"saved":false}
{"ts":1365440207176,"patch":[[{"diffs":[[0,"ind=True))\n\n"],[-1,"# "],[0,"@login_requi"]],"start1":1736,"start2":1736,"length1":26,"length2":24}]],"length":5978,"saved":false}
{"ts":1365440210773,"patch":[[{"diffs":[[0,"est)))\n\n"],[-1,"# "],[0,"@login_r"]],"start1":2870,"start2":2870,"length1":18,"length2":16}]],"length":5976,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365440785671,"patch":[[{"diffs":[[0,")\n\ndef remin"],[1,"s"],[0,"ders(request"]],"start1":1180,"start2":1180,"length1":24,"length2":25}]],"length":5977,"saved":false}
{"ts":1365440875787,"patch":[[{"diffs":[[0,"ef remin"],[-1,"s"],[0,"ders(req"]],"start1":1184,"start2":1184,"length1":17,"length2":16}]],"length":5976,"saved":false}
{"ts":1365441098898,"patch":[[{"diffs":[[0,"gin_required"],[1," url(r'^admin/', include(admin.site.urls)),"],[0,"\ndef day(req"]],"start1":4416,"start2":4416,"length1":24,"length2":67}]],"length":6019,"saved":false}
{"ts":1365441102186,"patch":[[{"diffs":[[0,"ired"],[-1," url(r'^admin/', include(admin.site.urls)),"],[0,"\ndef"]],"start1":4424,"start2":4424,"length1":51,"length2":8}]],"length":5976,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365526305584,"patch":[[{"diffs":[[0,"tContext"],[1,"\nfrom myproject.forms import RegistrationForm"],[0,"\n\nfrom m"]],"start1":440,"start2":440,"length1":16,"length2":61},{"diffs":[[0,"eturn d\n"],[1,"    \ndef GreenerRegistration(request):\n        if request.user.is_authenticated():\n                return HttpResponseRedirect(reverse(\"myproject.views.main\"))\n        if request.method == 'POST':\n                pass\n        else:\n                ''' user is not submitting the form, show them a blank registration form '''\n                form = RegistrationForm()\n                context = {'form': form}\n                return render_to_response('cal/register.html', context, context_instance=RequestContext(request))\n"]],"start1":6013,"start2":6013,"length1":8,"length2":530}]],"length":6543,"saved":false}
{"ts":1365526446836,"patch":[[{"diffs":[[0,"def "],[-1,"GreenerRegistration"],[1,"si"],[0,"(req"]],"start1":6026,"start2":6026,"length1":27,"length2":10}]],"length":6526,"saved":false}
{"ts":1365526448703,"patch":[[{"diffs":[[0," \ndef si"],[1,"gnup"],[0,"(request"]],"start1":6024,"start2":6024,"length1":16,"length2":20}]],"length":6530,"saved":false}
{"ts":1365526491004,"patch":[[{"diffs":[[0,"cal/"],[-1,"register"],[1,"signup"],[0,".htm"]],"start1":6459,"start2":6459,"length1":16,"length2":14}]],"length":6528,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365561430291,"patch":[[{"diffs":[[0,"    pass"],[1," form = LoginForm(request.POST)\n                if form.is_valid():\n                        username = form.cleaned_data['username']\n                        password = form.cleaned_data['password']\n                        drinker = authenticate(username=username, password=password)\n                        if drinker is not None:\n                                login(request, drinker)\n                                return HttpResponseRedirect('/profile/')\n                        else:\n                                return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n                else:\n                        return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n        else:"],[0,"\n       "]],"start1":6217,"start2":6217,"length1":16,"length2":793}]],"length":7305,"saved":false}
{"ts":1365561431910,"patch":[[{"diffs":[[0,"pass"],[-1," form = LoginForm(request.POST)\n                if form.is_valid():\n                        username = form.cleaned_data['username']\n                        password = form.cleaned_data['password']\n                        drinker = authenticate(username=username, password=password)\n                        if drinker is not None:\n                                login(request, drinker)\n                                return HttpResponseRedirect('/profile/')\n                        else:\n                                return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n                else:\n                        return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n        else:"],[0,"\n   "]],"start1":6221,"start2":6221,"length1":785,"length2":8}]],"length":6528,"saved":false}
{"ts":1365561434954,"patch":[[{"diffs":[[0,"    "],[-1,"pass"],[1," form = LoginForm(request.POST)\n                if form.is_valid():\n                        username = form.cleaned_data['username']\n                        password = form.cleaned_data['password']\n                        drinker = authenticate(username=username, password=password)\n                        if drinker is not None:\n                                login(request, drinker)\n                                return HttpResponseRedirect('/profile/')\n                        else:\n                                return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n                else:\n                        return render_to_response('login.html', {'form': form}, context_instance=RequestContext(request))\n        else:"],[0,"\n   "]],"start1":6217,"start2":6217,"length1":12,"length2":785}]],"length":7301,"saved":false}
{"ts":1365561438945,"patch":[[{"diffs":[[0,"  else:\n"],[-1,"        else:\n"],[0,"        "]],"start1":6991,"start2":6991,"length1":30,"length2":16}]],"length":7287,"saved":false}
{"ts":1365561443293,"patch":[[{"diffs":[[0,"            "],[-1," "],[0,"form = Login"]],"start1":6209,"start2":6209,"length1":25,"length2":24}]],"length":7286,"saved":false}
{"ts":1365561449504,"patch":[[{"diffs":[[0,"        "],[-1,"drinker"],[1,"g"],[0," = authe"]],"start1":6434,"start2":6434,"length1":23,"length2":17}]],"length":7280,"saved":false}
{"ts":1365561450841,"patch":[[{"diffs":[[0,"       g"],[1,"reener"],[0," = authe"]],"start1":6435,"start2":6435,"length1":16,"length2":22}]],"length":7286,"saved":false}
{"ts":1365561456506,"patch":[[{"diffs":[[0,"     if "],[-1,"drinker"],[1,"green"],[0," is not "]],"start1":6522,"start2":6522,"length1":23,"length2":21}]],"length":7284,"saved":false}
{"ts":1365561465824,"patch":[[{"diffs":[[0,"st, "],[-1,"drink"],[1,"g"],[0,"er)\n"]],"start1":6592,"start2":6592,"length1":13,"length2":9}]],"length":7280,"saved":false}
{"ts":1365561466887,"patch":[[{"diffs":[[0,"quest, g"],[1,"rr"],[0,"er)\n    "]],"start1":6589,"start2":6589,"length1":16,"length2":18}]],"length":7282,"saved":false}
{"ts":1365561468755,"patch":[[{"diffs":[[0,"uest, gr"],[-1,"r"],[1,"een"],[0,"er)\n    "]],"start1":6590,"start2":6590,"length1":17,"length2":19}]],"length":7284,"saved":false}
{"ts":1365561478769,"patch":[[{"diffs":[[0,"ect("],[-1,"'/profile/'"],[1,"reverse(\"myproject.views.main\")"],[0,")\n  "]],"start1":6661,"start2":6661,"length1":19,"length2":39}]],"length":7304,"saved":false}
{"ts":1365561851988,"patch":[[{"diffs":[[0,"inForm(reque"],[1,"f"],[0,"st.POST)\n   "]],"start1":6231,"start2":6231,"length1":24,"length2":25}]],"length":7305,"saved":false}
{"ts":1365561853007,"patch":[[{"diffs":[[0,"rm(reque"],[-1,"f"],[0,"st.POST)"]],"start1":6235,"start2":6235,"length1":17,"length2":16}]],"length":7304,"saved":false}
{"ts":1365561926960,"patch":[[{"diffs":[[0,"if green"],[1,"er"],[0," is not "]],"start1":6527,"start2":6527,"length1":16,"length2":18}]],"length":7306,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365562640128,"patch":[[{"diffs":[[0,"():\n            "],[-1,"    "],[0,"return HttpRespo"]],"start1":6087,"start2":6087,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"    "],[0,"form = "],[-1,"Logi"],[1,"Registratio"],[0,"nFor"]],"start1":6209,"start2":6209,"length1":23,"length2":26},{"diffs":[[0,"quest.POST)\n"],[-1,"    "],[0,"            "]],"start1":6239,"start2":6239,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"   "],[-1,"     "],[1,"user = User.objects.create_user("],[0,"username"],[-1," = "],[1,"="],[0,"form"]],"start1":6295,"start2":6295,"length1":27,"length2":49},{"diffs":[[0,"me']"],[-1,"\n                       "],[1,","],[0," pas"]],"start1":6365,"start2":6365,"length1":32,"length2":9},{"diffs":[[0,"ssword']"],[1,")"],[0,"\n       "]],"start1":6403,"start2":6403,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"        greener = authenticate(username=username, password=password)\n      "],[1,"user.save()\n"],[0,"    "]],"start1":6425,"start2":6425,"length1":83,"length2":20},{"diffs":[[0,"    "],[-1,"  if "],[0,"greener "],[-1,"is not None:\n                                login(request, greener)\n                "],[1,"= Greener(user=user)\n                greener.save()\n"],[0,"    "]],"start1":6453,"start2":6453,"length1":106,"length2":68},{"diffs":[[0,"    "],[-1,"            else:\n        "],[1,"else:\n"],[0,"    "]],"start1":6602,"start2":6602,"length1":34,"length2":14},{"diffs":[[0,"            "],[-1,"        "],[0,"return rende"]],"start1":6616,"start2":6616,"length1":32,"length2":24},{"diffs":[[0,"se('"],[-1,"login.html', {'form': form}, context_instance=RequestContext(request))\n                else:\n                        return render_to_response('login"],[1,"cal/signup"],[0,".htm"]],"start1":6651,"start2":6651,"length1":157,"length2":18}]],"length":7033,"saved":false}
{"ts":1365562654957,"patch":[[{"diffs":[[0,"er(user=user"],[1,", i"],[0,")\n          "]],"start1":6472,"start2":6472,"length1":24,"length2":27}]],"length":7036,"saved":false}
{"ts":1365562656895,"patch":[[{"diffs":[[0,"=user, i"],[1,"Number="],[0,")\n      "]],"start1":6479,"start2":6479,"length1":16,"length2":23}]],"length":7043,"saved":false}
{"ts":1365562661130,"patch":[[{"diffs":[[0,"iNumber="],[1,"''"],[0,")\n      "]],"start1":6486,"start2":6486,"length1":16,"length2":18}]],"length":7045,"saved":false}
{"ts":1365562664032,"patch":[[{"diffs":[[0,"Number='"],[1,"fake"],[0,"')\n     "]],"start1":6487,"start2":6487,"length1":16,"length2":20}]],"length":7049,"saved":false}
{"ts":1365562673238,"patch":[[{"diffs":[[0,"r='fake'"],[1,", "],[0,")\n      "]],"start1":6492,"start2":6492,"length1":16,"length2":18}]],"length":7051,"saved":false}
{"ts":1365562674983,"patch":[[{"diffs":[[0,"er='"],[-1,"fake"],[1,"i"],[0,"', )"]],"start1":6491,"start2":6491,"length1":12,"length2":9}]],"length":7048,"saved":false}
{"ts":1365562675841,"patch":[[{"diffs":[[0,"umber='i"],[1,"888"],[0,"', )\n   "]],"start1":6488,"start2":6488,"length1":16,"length2":19}]],"length":7051,"saved":false}
{"ts":1365562677557,"patch":[[{"diffs":[[0,"er='i888"],[1,"888"],[0,"', )\n   "]],"start1":6491,"start2":6491,"length1":16,"length2":19}]],"length":7054,"saved":false}
{"ts":1365562681001,"patch":[[{"diffs":[[0,"88888', "],[1,"name=''"],[0,")\n      "]],"start1":6497,"start2":6497,"length1":16,"length2":23}]],"length":7061,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365677525700,"patch":[[{"diffs":[[0,"reverse\n"],[1,"from django.contrib.auth import authenticate, login\n"],[0,"from dja"]],"start1":113,"start2":113,"length1":16,"length2":68},{"diffs":[[0,"ed\ndef m"],[-1,"onth"],[1,"ain"],[0,"(request"]],"start1":2988,"start2":2988,"length1":20,"length2":19},{"diffs":[[0,"st, year"],[-1,", month"],[1,"=time.localtime()[0], month=time.localtime()[1]"],[0,", change"]],"start1":3005,"start2":3005,"length1":23,"length2":63},{"diffs":[[0,", name='"],[1,"NAH NALA"],[0,"')\n     "]],"start1":6594,"start2":6594,"length1":16,"length2":24},{"diffs":[[0," greener.save()\n"],[1,"                new_greener = authenticate(username=request.POST['username'],\n                                    password=request.POST['password'])\n                login(request, new_greener)\n"],[0,"                "]],"start1":6628,"start2":6628,"length1":32,"length2":225}]],"length":7353,"saved":false}
{"ts":1365677529192,"patch":[[{"diffs":[[0,"n_required\ndef m"],[-1,"ain"],[1,"onth"],[0,"(request, year=t"]],"start1":2980,"start2":2980,"length1":35,"length2":36}]],"length":7354,"saved":false}
{"ts":1365677645268,"patch":[[{"diffs":[[0," = True\n"],[-1,"\n"],[0,"        "]],"start1":4152,"start2":4152,"length1":17,"length2":16}]],"length":7353,"saved":false}
{"ts":1365677647078,"patch":[[{"diffs":[[0,"def mont"],[-1,"h"],[0,"(request"]],"start1":2991,"start2":2991,"length1":17,"length2":16},{"diffs":[[0," current = True\n"],[1,"\n"],[0,"        lst[week"]],"start1":4143,"start2":4143,"length1":32,"length2":33}]],"length":7353,"saved":false}
{"ts":1365677650632,"patch":[[{"diffs":[[0,"def mont"],[1,"h"],[0,"(request"]],"start1":2991,"start2":2991,"length1":16,"length2":17},{"diffs":[[0," = True\n"],[-1,"\n"],[0,"        "]],"start1":4152,"start2":4152,"length1":17,"length2":16}]],"length":7353,"saved":false}
{"ts":1365677654171,"patch":[[{"diffs":[[0," current = True\n"],[1,"\n"],[0,"        lst[week"]],"start1":4144,"start2":4144,"length1":32,"length2":33}]],"length":7354,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365678374284,"patch":[[{"diffs":[[0,"_day=day"],[1,", "],[0,")\n      "]],"start1":3949,"start2":3949,"length1":16,"length2":18}]],"length":7356,"saved":false}
{"ts":1365678376761,"patch":[[{"diffs":[[0,"ay=day, "],[1,"cr"],[0,")\n      "]],"start1":3951,"start2":3951,"length1":16,"length2":18}]],"length":7358,"saved":false}
{"ts":1365678379468,"patch":[[{"diffs":[[0,"=day, cr"],[1,"eater"],[0,")\n      "]],"start1":3953,"start2":3953,"length1":16,"length2":21}]],"length":7363,"saved":false}
{"ts":1365678380431,"patch":[[{"diffs":[[0," creater"],[1,"="],[0,")\n      "]],"start1":3958,"start2":3958,"length1":16,"length2":17}]],"length":7364,"saved":false}
{"ts":1365678383071,"patch":[[{"diffs":[[0,"creater="],[1,"request.user"],[0,")\n      "]],"start1":3959,"start2":3959,"length1":16,"length2":28}]],"length":7376,"saved":false}
{"ts":1365678385582,"patch":[[{"diffs":[[0,"y, creat"],[-1,"e"],[1,"o"],[0,"r=reques"]],"start1":3956,"start2":3956,"length1":17,"length2":17}]],"length":7376,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365746483983,"patch":[[{"diffs":[[0,"    "],[-1,"EntriesFormset = modelformset_factory(Entry, extra=1, exclude=(\"creator\", \"date\"),\n                                         "],[1,"entries = Entry.objects.filter(date__year=year, date__month=month,\n                                         date__day=day,creator=request.user)\n    if len(entries) == 0:\n        EntriesFormset = modelformset_factory(Entry, extra=1, exclude=(\"creator\", \"date\"), can_delete=True)\n    else:\n        EntriesFormset = modelformset_factory(Entry, extra=0, exclude=(\"creator\", \"date\"),"],[0," can"]],"start1":4655,"start2":4655,"length1":132,"length2":386},{"diffs":[[0,"elete=True)\n"],[1,"    \n"],[0,"    other_en"]],"start1":5043,"start2":5043,"length1":24,"length2":29}]],"length":7635,"saved":false}
{"ts":1365746486137,"patch":[[{"diffs":[[0,"day=day,"],[1," "],[0,"creator="]],"start1":4773,"start2":4773,"length1":16,"length2":17}]],"length":7636,"saved":false}
{"contributors":[],"silentsave":true,"ts":1366184674644,"patch":[[{"diffs":[[0,"s.split()\n\n\n"],[1,"\n\n\n\n\n"],[0,"def _show_us"]],"start1":690,"start2":690,"length1":24,"length2":29},{"diffs":[[0,"yproject.views.m"],[-1,"ain"],[1,"onth"],[0,"\"))\n        if r"]],"start1":6520,"start2":6520,"length1":35,"length2":36},{"diffs":[[0,".views.m"],[-1,"ain"],[1,"onth"],[0,"\"))\n    "]],"start1":7188,"start2":7188,"length1":19,"length2":20}]],"length":7643,"saved":false}
{"ts":1366184676062,"patch":[[{"diffs":[[0,"it()\n\n\n\n"],[1,"class JSONResponseMixin(object):\n    def render_to_response(self, context):\n        return self.get_json_response(self.convert_context_to_json(context))\n    def get_json_response(self, content, **httpresponse_kwargs):\n        return HttpResponse(content, content_type='application/json', **httpresponse_kwargs)\n    def convert_context_to_json(self, context):\n        return simplejson.dumps(context)\n\nclass HybridDetailView(JSONResponseMixin, SingleObjectTemplateResponseMixin, BaseDetailView):\n    def render_to_response(self, context):\n        if self.request.is_ajax():\n            obj = context['object'].as_dict()\n            return JSONResponseMixin.render_to_response(self, obj)\n        else:\n            return SingleObjectTemplateResponseMixin.render_to_response(self, context)\n            "],[0,"\n\n\n\ndef "]],"start1":695,"start2":695,"length1":16,"length2":815}]],"length":8442,"saved":false}
{"ts":1366184696382,"patch":[[{"diffs":[[0,"onForm\n\n"],[1,"from django.http import HttpResponse\nfrom django.utils import simplejson\nfrom django.views.generic.detail import BaseDetailView, \\\n    SingleObjectTemplateResponseMixin\n\n"],[0,"from myp"]],"start1":539,"start2":539,"length1":16,"length2":186}]],"length":8612,"saved":false}
{"ts":1366184700639,"patch":[[{"diffs":[[0,"rm\n\n"],[-1,"from django.http import HttpResponse\n"],[0,"from"]],"start1":543,"start2":543,"length1":45,"length2":8}]],"length":8575,"saved":false}
{"ts":1366184707463,"patch":[[{"diffs":[[0,"iew,"],[-1," \\\n   "],[0," Sin"]],"start1":634,"start2":634,"length1":14,"length2":8}]],"length":8569,"saved":false}
